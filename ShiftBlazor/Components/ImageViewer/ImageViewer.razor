@namespace ShiftSoftware.ShiftBlazor.Components
@implements IShortcutComponent
@inject ShiftBlazorLocalizer Loc


<MudDialog ContentStyle="padding: 0;">
    <DialogContent>
        

        <MudToolBar Dense Class="light-toolbar">

            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel"></MudIcon>
            <MudText>@Title</MudText>
            <MudText Class="px-4" Style="margin:0;">@(Title ?? Loc["GalleryDefaultTitle"])</MudText>
            <MudSpacer/>

                <MudTooltip Text="@Loc["ModalClose"]">
                    <MudButton Style="min-width:40px;"
                               Variant="Variant.Text"
                               Size="Size.Medium"
                               aria-label="@Loc["ModalClose"]"
                               OnClick="Close">
                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Close" />
                    </MudButton>
                </MudTooltip>
        </MudToolBar>

        <MudCarousel Class="mud-width-full" Style="height: 90vh;" ShowArrows="true" ShowBullets="true"  EnableSwipeGesture="true" AutoCycle="false" TData="UploaderItem">

            @if (Files?.Count > 0)
            {
                foreach (var file in Files)
                {
                    <MudCarouselItem Transition="Transition.Slide" Color="@Color.Dark" Style="@($"color: #fff;background:{Colors.Gray.Darken4};")">
                        @if (file.IsImage()) {
                            <MudImage ObjectFit="ObjectFit.ScaleDown" ObjectPosition="ObjectPosition.Center" Src="@file?.File?.Url" Alt="@file?.GetFileName()" Elevation="25" Style="width: 100%; height: 100%;" />
                        }
                        else
                        {
                            <MudIcon Icon="@Icons.Material.Filled.InsertDriveFile" Style="width: 80%; height: 80%; display: block; margin: auto;" />
                            <MudText Align="Align.Center">@file.GetFileName()</MudText>
                        }
                    </MudCarouselItem>
                    
                }
            }

        </MudCarousel>
    </DialogContent>
</MudDialog>

@code {
    [Parameter]
    public List<UploaderItem>? Files { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [CascadingParameter]
    public MudDialogInstance? MudDialog { get; set; }

    public Guid Id { get; private set; } = Guid.NewGuid();

    public Dictionary<KeyboardKeys, object> Shortcuts { get; set; } = new();

    protected override void OnInitialized()
    {
        if (MudDialog != null)
        {
            IShortcutComponent.Register(this);
        }
    }

    public ValueTask HandleShortcut(KeyboardKeys actions)
    {
        switch (actions)
        {
            case KeyboardKeys.Escape:
                MudDialog?.Close();
                break;
        }

        return new ValueTask();
    }

    public void Close()
    {
        MudDialog?.Close();
    }

    void IDisposable.Dispose()
    {
        IShortcutComponent.Remove(Id);
    }
}
