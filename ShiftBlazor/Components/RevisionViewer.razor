@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor;
@using ShiftIdentity.Model
@inject ShiftModalService ShiftModal
@inject SettingManager SettingManager
@inject IStringLocalizer<Resources.Components.ResourceViewer> Loc

<ShiftList T="RevisionDTO"
           Values="@_Revisions"
           DisableSelection="@true"
           OnRowClick="@RowClickHandler"
           DisableHeaderToolbar="@true"
           @ref="ShiftList"
           ExcludedColumns="@(new List<string> {nameof(RevisionDTO.SavedByUserID)})">

    <HeaderTemplate>
        <MudToolBar Dense="@true" DisableGutters="@false" Class="light-toolbar shift-toolbar-header">
            <MudIcon Icon="@Icons.Material.Filled.List"></MudIcon>
            <MudText Class="px-4" Style="margin:0;">@(Title ?? Loc["DefaultTitle"])</MudText>

            <MudSpacer></MudSpacer>

            @if (MudDialog != null)
            {
                <MudTooltip Text="@Loc["CloseButton"]">
                    <MudButton Style="min-width:40px;"
                           Variant="@Variant.Text"
                           Size="@Size.Medium"
                           Color="@Color.Default"
                           OnClick="@Close">
                        <MudIcon Size="@Size.Medium" Icon="@Icons.Material.Filled.Close" />
                    </MudButton>
                </MudTooltip>
            }
        </MudToolBar>
    </HeaderTemplate>

    <ColumnTemplate>
        <GridForeignColumn TValue="PublicUserListDTO"
                           Field="@nameof(RevisionDTO.SavedByUserID)"
                           ForeignKeyField="@nameof(PublicUserListDTO.ID)"
                           ForeignKeyValue="@nameof(PublicUserListDTO.Name)">
            <SfDataManager HttpClientInstance="new HttpClient(ShiftList.MessageHandler)" Url="@SettingManager.Configuration.UserListEndpoint" CrossDomain="true" Adaptor="Adaptors.ODataV4Adaptor" />
        </GridForeignColumn>
    </ColumnTemplate>
</ShiftList>

@code {

    [CascadingParameter]
    public MudDialogInstance? MudDialog { get; set; }

    [Parameter]
    [EditorRequired]
    public List<RevisionDTO> Revisions { get; set; } = new();

    private List<RevisionDTO> _Revisions => Revisions.Where(x =>
        x.ValidTo.HasValue && x.ValidTo.Value.Year <= DateTime.UtcNow.Year
    ).ToList();

    [Parameter]
    public string? Title { get; set; }

    public ShiftList<RevisionDTO>? ShiftList { get; set; }

    private async Task RowClickHandler(RecordClickEventArgs<RevisionDTO> args)
    {
        await Task.Delay(1);
        MudDialog?.Close(args.RowData.ValidTo);
    }

    private void Close()
    {
        MudDialog?.Close();
    }

}