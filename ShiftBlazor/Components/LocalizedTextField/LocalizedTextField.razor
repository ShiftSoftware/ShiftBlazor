@namespace ShiftSoftware.ShiftBlazor.Components
@using System.Linq.Expressions

<LocalizedInput Value="@Value" ValueChanged="ValueChanged" Label="@Label" For="For">
    <MudTextFieldExtended T="string"
                          OnlyValidateIfDirty="@OnlyValidateIfDirty"
                          Value="@context.Value"
                          Error="@context.Error"
                          ErrorText="@context.ErrorText"
                          Lines="Lines"
                          MaxLines="MaxLines"
                          AutoGrow="AutoGrow"
                          ValueChanged="@context.ValueChanged"
                          Label="@context.Label" />
</LocalizedInput>


@code {

    /// <summary>
    /// The value of this input element.
    /// </summary>
    [Parameter]
    public string Value { get; set; } = default!;

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    /// <summary>
    /// If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.
    /// </summary>
    [Parameter]
    public string? Label { get; set; }

    /// <summary>
    /// Specify an expression which returns the model's field for which validation messages should be displayed.
    /// If value is null, validation will be skipped for this field.
    /// </summary>
    [Parameter]
    public Expression<Func<string?>>? For { get; set; }

    /// <summary>
    /// The validation is only triggered if the user has changed the input value at least once. By default, it is true
    /// </summary>
    [Parameter]
    public bool OnlyValidateIfDirty { get; set; } = true;

    [Parameter]
    public int Lines { get; set; } = 1;

    [Parameter]
    public int MaxLines { get; set; } = 1;

    [Parameter]
    public bool AutoGrow { get; set; } = false;
}