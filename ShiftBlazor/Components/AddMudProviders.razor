@inject SettingManager SettingManager

<MudThemeProvider @bind-IsDarkMode="IsDarkMode"
                  DefaultScrollbar="@DefaultScrollbar"
                  Theme="Theme" />
<MudDialogProvider CloseButton="_DialogOptions.CloseButton"
                   Position="_DialogOptions.Position"
                   CloseOnEscapeKey="_DialogOptions.CloseOnEscapeKey"
                   DisableBackdropClick="_DialogOptions.DisableBackdropClick"
                   FullWidth="_DialogOptions.FullWidth"
                   MaxWidth="_DialogOptions.MaxWidth"
                   NoHeader="_DialogOptions.NoHeader" />
<MudSnackbarProvider />

@code {

    [Parameter]
    public bool IsDarkMode { get; set; }

    [Parameter]
    public EventCallback<bool> IsDarkModeChanged { get; set; }

    [Parameter]
    public bool DefaultScrollbar { get; set; }

    [Parameter]
    public MudTheme? Theme { get; set; }

    [Parameter]
    public Action<DialogOptions>? DialogOptions { get; set; }

    private DialogOptions _DialogOptions = new();

    protected override void OnInitialized()
    {
        _DialogOptions.Position = SettingManager.Settings.ModalPosition;
        _DialogOptions.CloseOnEscapeKey = true;
        _DialogOptions.DisableBackdropClick = true;
        _DialogOptions.FullWidth = true;
        _DialogOptions.NoHeader = false;
        _DialogOptions.CloseButton = true;
        _DialogOptions.MaxWidth = MaxWidth.Large;

        DialogOptions?.Invoke(_DialogOptions);
    }

}