@inject SettingManager SettingManager

<MudThemeProvider @bind-IsDarkMode="IsDarkMode"
                  DefaultScrollbar="@DefaultScrollbar"
                  Theme="Theme" />
<MudDialogProvider CloseButton="_DialogOptions.CloseButton"
                   Position="_DialogOptions.Position"
                   CloseOnEscapeKey="_DialogOptions.CloseOnEscapeKey"
                   BackdropClick="_DialogOptions.BackdropClick"
                   FullWidth="_DialogOptions.FullWidth"
                   MaxWidth="_DialogOptions.MaxWidth"
                   NoHeader="_DialogOptions.NoHeader" />
<MudPopoverProvider />
<MudSnackbarProvider />

@code {

    [Parameter]
    public bool IsDarkMode { get; set; }

    [Parameter]
    public EventCallback<bool> IsDarkModeChanged { get; set; }

    [Parameter]
    public bool DefaultScrollbar { get; set; }

    [Parameter]
    public MudTheme? Theme { get; set; } = new();

    [Parameter]
    public Action<DialogOptions>? DialogOptions { get; set; }

    private DialogOptions _DialogOptions = new();

    protected override void OnInitialized()
    {
        _DialogOptions.CloseOnEscapeKey = true;
        _DialogOptions.BackdropClick = false;
        _DialogOptions.FullWidth = true;
        _DialogOptions.NoHeader = false;
        _DialogOptions.CloseButton = true;

        DialogOptions?.Invoke(_DialogOptions);

        if (SettingManager.Settings.ModalPosition != null)
        {
            _DialogOptions.Position = SettingManager.Settings.ModalPosition;
        }
        else if (_DialogOptions.Position == null)
        {
            _DialogOptions.Position = DefaultAppSetting.ModalPosition;
        }
        else
        {
            SettingManager.SetModalPosition((DialogPosition)_DialogOptions.Position);
        }

        if (SettingManager.Settings.ModalWidth != null)
        {
            _DialogOptions.MaxWidth = SettingManager.Settings.ModalWidth;
        }
        else if (_DialogOptions.MaxWidth == null)
        {
            _DialogOptions.MaxWidth = DefaultAppSetting.ModalWidth;
        }
        else
        {
            SettingManager.SetModalWidth((MaxWidth)_DialogOptions.MaxWidth);
        }
    }
}