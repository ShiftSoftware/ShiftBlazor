@namespace ShiftSoftware.ShiftBlazor.Components
@using Microsoft.AspNetCore.Components.Forms

@inherits Events.EventComponentBase
@implements IDisposable

<MudPaper id="@UploaderId" Class="@(DefaultClass + (ReadOnly ? " readonly" : ""))" Elevation="0" Outlined="true">
    @if (Items.Count > 0 || !ReadOnly)
    {
        <CascadingValue Value="this" IsFixed="true">
            <MudGrid Spacing="@(ShowThumbnail ? 2 : 1)">
                @foreach (var item in Items)
                {
                    <MudItem @key="item.Id" Style="cursor: grab;" data-guid="@item.Id">
                        @if (ShowThumbnail)
                        {

                            <UploaderItemThumbnail Item="@item" Height="@ThumbnailSize" Width="@ThumbnailSize"></UploaderItemThumbnail>
                        }
                        else
                        {
                            <UploaderItemChip Item="@item"></UploaderItemChip>
                        }
                    </MudItem>
                }

                @if (!ReadOnly)
                {
                    <MudItem @key="@("add-file")" Class="add-file">
                        @if (ShowThumbnail)
                        {
                            <MudIconButton OnClick="OpenInput" Icon="@Icons.Material.Filled.Add" Size="Size.Large" Variant="Variant.Filled" Style=@($"width: {ThumbnailSize}px;height: {ThumbnailSize}px;")></MudIconButton>
                        }
                        else
                        {
                            <MudChip Icon="@Icons.Material.Filled.Add" OnClick="OpenInput">Add</MudChip>
                        }
                    </MudItem>
                }
            </MudGrid>
        </CascadingValue>
        <InputFile id="@InputId" OnChange="OnInputFileChanged" hidden multiple accept="@InputAccept" />

    }
    else
    {
        <MudText Typo="Typo.h6">No files attached</MudText>
    }
</MudPaper>