@namespace ShiftSoftware.ShiftBlazor.Components
@using Microsoft.AspNetCore.Components.Forms
@inject IStringLocalizer<Resources.Components.FileUploader> Loc

@inherits Events.EventComponentBase
@implements IDisposable

@if (TypeAuthAction is null || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Read) || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Write) || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Delete))
{
    <MudField id="@UploaderId" Label="@Label" Class="@("FileUpload relative my-4 z-10" + (ReadOnly ? " readonly" : ""))" Variant="Variant.Outlined">

        @if (Items.Count > 0 || !ReadOnly)
        {
            <MudGrid Spacing="@(ShowThumbnail ? 2 : 1)">
                <CascadingValue Value="this" IsFixed="true">
                    @foreach (var item in Items)
                    {
                        <MudItem @key="item.Id" Style="cursor: grab;" data-guid="@item.Id">
                            @if (ShowThumbnail)
                            {
                                <UploaderItemThumbnail CanDelete="@(TypeAuthAction is null || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Delete))" Item="@item" Height="@ThumbnailSize" Width="@ThumbnailSize"></UploaderItemThumbnail>
                            }
                            else
                            {
                                <UploaderItemChip CanDelete="@(TypeAuthAction is null || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Delete))" Item="@item"></UploaderItemChip>
                            }
                        </MudItem>
                    }
                </CascadingValue>

                @if (!ReadOnly && (TypeAuthAction is null || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Write)))
                {
                    <MudItem @key="@("add-file")" Class="add-file">
                        @if (ShowThumbnail)
                        {
                            <MudIconButton OnClick="OpenInput" Icon="@Icons.Material.Filled.Add" Size="Size.Large" Variant="Variant.Filled" Style=@($"width: {ThumbnailSize}px;height: {ThumbnailSize}px;")></MudIconButton>
                        }
                        else
                        {
                            <MudChip Icon="@Icons.Material.Filled.Add" OnClick="OpenInput">@Loc["AddChipButton"]</MudChip>
                        }
                    </MudItem>
                }
            </MudGrid>
            <InputFile id="@InputId" OnChange="OnInputFileChanged" hidden multiple accept="@InputAccept" />

        }
        else
        {
            <MudText Typo="Typo.h6">@Loc["NoFilesSelected"]</MudText>
        }
    </MudField>

}