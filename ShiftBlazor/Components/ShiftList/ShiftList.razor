@namespace ShiftSoftware.ShiftBlazor.Components
@typeparam T where T : ShiftEntityDTOBase, new()

@if (TypeAuthAction == null || TypeAuthService == null || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Read))
{
    @if (!string.IsNullOrWhiteSpace(Title) && !IsEmbed)
    {
        <PageTitle>@Title</PageTitle>
    }

    <MudPaper Elevation="25">
        <CascadingValue Value="this" IsFixed="true">

            <header>
                @if (!DisableHeaderToolbar)
                {
                    <MudToolBar Style=@ColorHelperClass.GetToolbarStyles(NavColor, NavIconFlatColor) Dense="@Dense" DisableGutters="false" Class="light-toolbar shift-toolbar-header">
                        <MudIcon Size="@IconSize" Icon="@IconSvg"></MudIcon>
                        <MudText Class="px-4" Style="margin:0;">@(Title ?? Loc["ListDefaultTitle"])</MudText>

                        @ToolbarStartTemplate

                        <MudSpacer></MudSpacer>

                        @ToolbarEndTemplate

                        @if (!DisableColumnChooser)
                        {
                            <MudTooltip Text="@Loc["ColumnChooserTitle"]">
                                <MudIconButton Size="@IconSize"
                                               Icon="@Icons.Material.Filled.ViewColumn"
                                               Color="NavIconFlatColor ? Color.Inherit : Color.Default"
                                               OnClick="OpenColumnChooser" />
                            </MudTooltip>
                        }

                        @if (!DisableDeleteFilter && Values == null)
                        {
                            <MudTooltip Text="@Loc["FilterDeletedItemsTitle"]">
                                <MudMenu Size="@IconSize"
                                         Icon="@Icons.Material.Filled.RestoreFromTrash"
                                         Color="NavIconFlatColor ? Color.Inherit : Color.Default"
                                         AnchorOrigin="Origin.BottomLeft">
                                    <MudMenuItem OnClick="() => FilterDeleted()">@Loc["ShowBothDeletedAndActiveOption"]</MudMenuItem>
                                    <MudMenuItem OnClick="() => FilterDeleted(true)">@Loc["ShowDeletedOnlyOption"]</MudMenuItem>
                                    <MudMenuItem OnClick="() => FilterDeleted(false)">@Loc["ShowActiveOnlyOption"]</MudMenuItem>
                                </MudMenu>
                            </MudTooltip>
                        }

                        @if (EnableExport)
                        {
                            <MudTooltip Text="@Loc["ExportButtonTitle"]">
                                <MudIconButton Icon="@Icons.Material.Filled.FileDownload"
                                               Size="@IconSize"
                                               Color="NavIconFlatColor ? Color.Inherit : Color.Warning"
                                               OnClick="@ExportList" />
                            </MudTooltip>
                        }

                        @if (RenderAddButton)
                        {
                            <MudTooltip Text="@Loc["AddNewItemTitle"]">
                                <MudIconButton Icon="@Icons.Material.Filled.AddCircle"
                                               Size="@IconSize"
                                               Color="NavIconFlatColor ? Color.Inherit : Color.Primary"
                                               OnClick="() => ViewAddItem()" />
                            </MudTooltip>
                        }

                        @if (MudDialog != null && IsEmbed != true)
                        {
                            @if (RenderAddButton || !DisableColumnChooser || !DisableDeleteFilter || EnableExport)
                            {
                                <MudDivider Vertical="true" Style="height: 60%;align-self: center;margin-inline: 5px;opacity: 0.5;"></MudDivider>
                            }

                            @ToolbarControlsTemplate

                            <MudTooltip Text="@Loc["CloseModalButtonTitle"]">
                                <MudButton Style="min-width:40px; z-index: 100;"
                                            Variant="Variant.Text"
                                            Size="Size.Medium"
                                            Color="NavIconFlatColor ? Color.Inherit : Color.Default"
                                            OnClick="CloseDialog">
                                    <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Close" />
                                </MudButton>
                            </MudTooltip>
                        }
                        

                    </MudToolBar>
                }

                @HeaderTemplate
            </header>

            <MudDataGrid
                         @ref="DataGrid"
                         Items="@Values"
                         MultiSelection="@EnableSelection"
                         Hideable="!DisableColumnChooser"
                         SortMode="@SortMode"
                         FilterMode="DataGridFilterMode.Simple"
                         Dense="@Dense"
                         Elevation="0"
                         RowClick="@RowClickHandler"
                         Filterable="!DisableFilters"
                         Hover="true"
                         Virtualize="@EnableVirtualization"
                         Height="@Height"
                         ShowColumnOptions="true"
                         RowsPerPage="@SelectedPageSize"
                         ServerData="ServerData"
                         FixedHeader="!DisableStickyHeader"
                         RowClassFunc="@((item, index) => item.IsDeleted ? "is-deleted" : "")"
                         T="T">

                <NoRecordsContent>
                    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
                    {
                        <MudAlert Severity="Severity.Error">@ErrorMessage</MudAlert>
                    }
                </NoRecordsContent>

                <Columns>

                    @if (EnableSelection) {
                        // Using SelectColumn doesn't work as expected with ServerData
                        <TemplateColumn T="T" Tag="@("select-column")" Sortable="false" Resizable="false" ShowColumnOptions="false" HeaderStyle="width:0%"
                                        Filterable="false" IsEditable="false">
                            <HeaderTemplate>
                                <MudTooltip Text="@Loc["SelectAllButtonTitle"]">
                                    <MudCheckBox T="bool" Size="@IconSize" Checked="@context.IsAllSelected" CheckedChanged="@context.Actions.SetSelectAllAsync" />
                                </MudTooltip>
                            </HeaderTemplate>
                            <CellTemplate>
                                @{
                                    var isSelected = DataGrid?.SelectedItems.FirstOrDefault(x => x.ID == context.Item.ID) != null || IsAllSelected;
                                }
                                <MudCheckBox T="bool" Size="@IconSize" Checked="@isSelected" CheckedChanged="@context.Actions.SetSelectedItemAsync" />
                            </CellTemplate>
                        </TemplateColumn>
                    }

                    @if (ShowIDColumn)
                    {
                        <PropertyColumn Property="x => x.ID"
                                        Title="@Loc["IdColumnHeaderText"]"
                                        HeaderStyle="width: 0;" />
                    }

                    @ChildContent

                    @if (!DisableActionColumn && ComponentType != null)
                    {
                        <TemplateColumn HeaderStyle="width: 0;" Sortable="false" Filterable="false" Title="@Loc["ActionsColumnHeaderText"]">
                            
                            <CellTemplate>
                                @if (ActionsTemplate == null)
                                {
                                    <MudButton OnClick="@(() => ViewAddItem(context.Item.ID))"
                                               Variant="@Variant.Outlined"
                                               EndIcon="@Icons.Material.Filled.OpenInNew"
                                               Color="@Color.Primary"
                                               Size="@(Dense ? Size.Small : Size.Medium)">
                                        @Loc["ViewItemButtonText"]
                                    </MudButton>
                                }
                                else
                                {
                                    @ActionsTemplate(context);
                                }

                            </CellTemplate>
                        </TemplateColumn>
                    }
                </Columns>

                <PagerContent>
                    @if (!EnableVirtualization && !DisablePagination)
                    {
                        <MudDataGridPager PageSizeOptions="@PageSizes" RowsPerPageString="@Loc["ItemsPerPageLabel"]" />
                    }
                </PagerContent>
            </MudDataGrid>
        </CascadingValue>
    </MudPaper>
}
