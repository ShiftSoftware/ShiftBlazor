@namespace ShiftSoftware.ShiftBlazor.Components
@typeparam T where T : ShiftEntityDTOBase, new()

@if (TypeAuthAction == null || TypeAuthService.Can(TypeAuthAction, TypeAuth.Core.Access.Read))
{
    @if (!string.IsNullOrWhiteSpace(Title))
    {
        <PageTitle>@Title</PageTitle>
    }

    <MudPaper Elevation="25">
        <CascadingValue Value="this" IsFixed="true">

            <header>
                @if (!DisableHeaderToolbar)
                {
                    <MudToolBar Style=@ColorHelperClass.GetToolbarStyles(NavColor, NavIconFlatColor) Dense="@Dense" DisableGutters="false" Class="light-toolbar shift-toolbar-header">
                        <MudIcon Size="@IconSize" Icon="@IconSvg"></MudIcon>
                        <MudText Class="px-4" Style="margin:0;">@(Title ?? Loc["ListDefaultTitle"])</MudText>

                        @ToolbarStartTemplate

                        <MudSpacer></MudSpacer>

                        @ToolbarEndTemplate

                        @if (!DisableColumnChooser)
                        {
                            <MudTooltip Text="@Loc["ColumnChooser"]">
                                <MudIconButton Size="@IconSize"
                                               Icon="@Icons.Material.Filled.ViewColumn"
                                               Color="NavIconFlatColor ? Color.Inherit : Color.Default"
                                               OnClick="OpenColumnChooser" />
                            </MudTooltip>
                        }

                        @if (EnablePrint)
                        {
                            <MudTooltip Text="@Loc["PrintButton"]">
                                <MudIconButton Icon="@Icons.Material.Filled.Print"
                                               Size="@IconSize"
                                               Color="NavIconFlatColor ? Color.Inherit : Color.Warning"
                                               OnClick="PrintList" />
                            </MudTooltip>
                        }

                        @if (!DisableDeleteFilter)
                        {
                            <MudTooltip Text="@Loc["FilterDeletedItems"]">
                                <MudMenu Size="@IconSize"
                                         Icon="@Icons.Material.Filled.RestoreFromTrash"
                                         Color="NavIconFlatColor ? Color.Inherit : Color.Default"
                                         AnchorOrigin="Origin.BottomLeft">
                                    <MudMenuItem OnClick="() => FilterDeleted()">@Loc["ShowBothDeletedAndActive"]</MudMenuItem>
                                    <MudMenuItem OnClick="() => FilterDeleted(true)">@Loc["ShowDeletedOnly"]</MudMenuItem>
                                    <MudMenuItem OnClick="() => FilterDeleted(false)">@Loc["ShowActiveOnly"]</MudMenuItem>
                                </MudMenu>
                            </MudTooltip>
                        }

                        @* @if (EnableCsvExcelExport || EnablePdfExport)
                        {
                            <MudTooltip Text="@Loc["DownloadButton"]">
                                <MudMenu Icon="@Icons.Material.Filled.FileDownload"
                                            Color="NavIconFlatColor ? Color.Inherit : Color.Warning"
                                            AnchorOrigin="Origin.BottomLeft"
                                            Class="download-options">
                                    @if (EnableCsvExcelExport)
                                    {
                                        <MudMenuItem OnClick="() => DownloadList(DownloadType.CSV)">@Loc["CSVExportButton"]</MudMenuItem>
                                        <MudMenuItem OnClick="() => DownloadList(DownloadType.Excel)">@Loc["ExcelExportButton"]</MudMenuItem>
                                    }
                                    @if (EnablePdfExport)
                                    {
                                        <MudMenuItem OnClick="() => DownloadList(DownloadType.PDF)">@Loc["PDFExportButton"]</MudMenuItem>
                                    }
                                </MudMenu>
                            </MudTooltip>
                        } *@

                        @if (RenderAddButton)
                        {
                            <MudTooltip Text="@Loc["AddButton"]">
                                <MudIconButton Icon="@Icons.Material.Filled.AddCircle"
                                               Size="@IconSize"
                                               Color="NavIconFlatColor ? Color.Inherit : Color.Primary"
                                               OnClick="() => ViewAddItem()" />
                            </MudTooltip>
                        }

                        @if (MudDialog != null && IsEmbedded != true)
                        {
                            @* @if (RenderAddButton || EnableCsvExcelExport || EnablePdfExport || EnablePrint) *@
                            @if (RenderAddButton || EnablePrint)
                            {
                                <MudDivider Vertical="true" Style="height: 60%;align-self: center;margin-inline: 5px;opacity: 0.5;"></MudDivider>
                            }

                            @ToolbarControlsTemplate

                            <MudTooltip Text="@Loc["CloseButton"]">
                                <MudButton Style="min-width:40px; z-index: 100;"
                                            Variant="Variant.Text"
                                            Size="Size.Medium"
                                            Color="NavIconFlatColor ? Color.Inherit : Color.Default"
                                            OnClick="CloseDialog">
                                    <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Close" />
                                </MudButton>
                            </MudTooltip>
                        }
                        

                    </MudToolBar>
                }

                @HeaderTemplate
            </header>

            <MudDataGrid
                         @ref="DataGrid"
                         MultiSelection="EnableSelection"
                         Hideable="!DisableColumnChooser"
                         SortMode="SortMode.Multiple"
                         FilterMode="DataGridFilterMode.Simple"
                         Dense="@Dense"
                         Elevation="0"
                         RowClick="@RowClickHandler"
                         Filterable="true"
                         Hover="true"
                         Virtualize="@EnableVirtualization"
                         Height="@Height"
                         ShowColumnOptions="true"
                         ServerData="@(new Func<GridState<T>, Task<GridData<T>>>(ServerReload))"
                         RowClassFunc="@((item, index) => item.IsDeleted ? "is-deleted" : "")"
                         T="T">

                <Columns>

                    @if (EnableSelection) {
                        <SelectColumn T="T" />
                    }

                    @if (ShowIDColumn)
                    {
                        <PropertyColumn Property="x => x.ID"
                                        Title="@Loc["IdColumnHeaderText"]"
                                        HeaderStyle="width: 0;" />
                    }

                    @ChildContent

                    @if (!DisableActionColumn && ComponentType != null)
                    {
                        <TemplateColumn HeaderStyle="width: 0;" Sortable="false" Filterable="false" Title="Actions">
                            
                            <CellTemplate>
                                <MudButton OnClick="@(() => ViewAddItem(context.Item.ID))"
                                            Variant="@Variant.Outlined"
                                            EndIcon="@Icons.Material.Filled.OpenInNew"
                                            Color="@Color.Primary"
                                            Size="@(Dense ? Size.Small : Size.Medium)">
                                    @Loc["ViewButton"]
                                </MudButton>
                            </CellTemplate>
                        </TemplateColumn>
                    }
                </Columns>

                <PagerContent>
                    <MudDataGridPager/>
                </PagerContent>
            </MudDataGrid>
        </CascadingValue>
    </MudPaper>
}
