@namespace ShiftSoftware.ShiftBlazor.Components
@typeparam T where T : ShiftEntityDTOBase, new()
@typeparam TEntity where TEntity : ShiftEntityDTOBase, new()
@typeparam TProperty
@inherits PropertyColumnExtended<T, TProperty>
@implements IDisposable

@{
    base.BuildRenderTree(__builder);
}

@code {
    internal RenderFragment<CellContext<T>> _CellTemplate => context =>
    @<text>
        @if (IsReady)
        {
            var id = Misc.GetValueFromPropertyPath(context.Item, ODataParameters!.DataValueField!)?.ToString();
            var data = RemoteData.FirstOrDefault(x => x.ID == id);
            if (data != null)
            {
                var value = Misc.GetValueFromPropertyPath(data, PropertyFieldName);
                if (IsButtonColumn)
                {
                    <a @onclick="() => OpenDialogForm(GetKey(context.Item))" @onclick:preventDefault="true" @onclick:stopPropagation="true" href="@GetUrl(GetKey(context.Item))">
                        @if (ButtonTemplate == null)
                        {
                            <span class="button-column-button">
                                @value
                            </span>
                        }
                        else
                        {
                            @ButtonTemplate((TProperty?)value)
                        }
                    </a>
                }
                else {
                    @value
                }
            }
        }
        else
        {
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="20px" />
        }
    </text>;

    internal RenderFragment<HeaderContext<T>> _HeaderTemplate => context =>
    @<text>
        <span class="column-header">@Title</span>
        @if (Filterable ?? DataGrid?.Filterable ?? false)
        {
            <MudSpacer />
            <MudIconButton OnClick="@OpenFilter" Icon="@FilterIcon" Size="@Size.Small" />
            <MudOverlay Visible="IsFilterOpen" OnClick="@CloseFilter" />
            <MudPopover Open="IsFilterOpen" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Paper Elevation="8" Style="width:400px" Class="pa-4">
                     <MudStack>
                         <ShiftAutocomplete T="ShiftEntitySelectDTO" TEntitySet="TEntity" ODataParameters="ODataParameters" MultiSelect @bind-SelectedValues="FilterItems" />
                         <MudStack Row>
                         <MudSpacer />
                         <MudButton OnClick="ClearFilterAsync">Clear</MudButton>
                         <MudButton Color="@Color.Primary" OnClick="ApplyFilterAsync">Filter</MudButton>
                     </MudStack>
                 </MudStack>
             </MudPopover>
        }
    </text>;
}