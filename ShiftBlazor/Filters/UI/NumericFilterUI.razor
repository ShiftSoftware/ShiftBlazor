@using ShiftSoftware.ShiftBlazor.Filters.Models
@inherits FilterUIBase

<div style="width: 100%;">

	<MudField Label="@Filter.Field" InnerPadding="false">
		<MudStack Row>
			<MudSelect Underline="false" T="ODataOperator" Value="Filter.Operator" ValueChanged="OperatorChanged">
				<MudSelectItem Value="ODataOperator.Equal">Equal</MudSelectItem>
				<MudSelectItem Value="ODataOperator.NotEqual">Not Equal</MudSelectItem>
				<MudSelectItem Value="ODataOperator.GreaterThan">GreaterThan</MudSelectItem>
				<MudSelectItem Value="ODataOperator.GreaterThanOrEqual">GreaterThanOrEqual</MudSelectItem>
				<MudSelectItem Value="ODataOperator.LessThan">LessThan</MudSelectItem>
				<MudSelectItem Value="ODataOperator.LessThanOrEqual">LessThanOrEqual</MudSelectItem>
				<MudSelectItem Value="ODataOperator.StartsWith">Starts With</MudSelectItem>
				<MudSelectItem Value="ODataOperator.EndsWith">Ends With</MudSelectItem>
				<MudSelectItem Value="ODataOperator.Contains">Contains</MudSelectItem>
				<MudSelectItem Value="ODataOperator.NotContains">Not Contains</MudSelectItem>
				<MudSelectItem Value="ODataOperator.IsNotEmpty">Is Set</MudSelectItem>
				<MudSelectItem Value="ODataOperator.IsEmpty">Is Not Set</MudSelectItem>
			</MudSelect>

			@if (Filter.Operator != ODataOperator.IsEmpty && Filter.Operator != ODataOperator.IsNotEmpty)
			{
				<MudNumericField T="double?"
								 Value="Filter.Value as double?"
								 ValueChanged="ValueChanged"
								 Clearable
								 Underline="false" />
			}
		</MudStack>
	</MudField>

</div>