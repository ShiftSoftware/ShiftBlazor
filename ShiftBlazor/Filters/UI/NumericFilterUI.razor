@using ShiftSoftware.ShiftBlazor.Filters.Models
@inherits FilterUIBase

<div style="width: 100%;" class="@ClassName">

	<MudField Label="@Filter.Field" InnerPadding="false">
		<MudStack Row>
			<MudMenu Style="padding: 4px 0;" OpenChanged="OnMenuOpened">
				<ActivatorContent>
					<MudText>@Filter.Operator</MudText>
					<MudIcon Color="Color.Default" Style="margin-inline-start: 5px" Icon="@MenuIcon" />
				</ActivatorContent>
				<ChildContent>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.Equal))">Equal</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.NotEqual))">Not Equal</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.GreaterThan))">GreaterThan</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.GreaterThanOrEqual))">GreaterThanOrEqual</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.LessThan))">LessThan</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.LessThanOrEqual))">LessThanOrEqual</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.StartsWith))">Starts With</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.EndsWith))">Ends With</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.Contains))">Contains</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.NotContains))">Not Contains</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.IsNotEmpty))">Is Set</MudMenuItem>
					<MudMenuItem OnClick="@((x) => OperatorChanged(ODataOperator.IsEmpty))">Is Not Set</MudMenuItem>
				</ChildContent>
			</MudMenu>

			@if (Filter.Operator != ODataOperator.IsEmpty && Filter.Operator != ODataOperator.IsNotEmpty)
			{
				<MudNumericField T="double?"
								 Value="Filter.Value as double?"
								 ValueChanged="ValueChanged"
								 Clearable
								 Underline="false" />
			}
		</MudStack>
	</MudField>

</div>