@using ShiftSoftware.ShiftBlazor.Filters.Models
@using ShiftSoftware.ShiftBlazor.Filters.UI

@if (Parent?.Filters != null)
{
    <MudGrid>

    @foreach (var (id, filter) in Parent.Filters.Where(x => !x.Value.IsHidden))
    {
            <MudItem xxl="filter.UIOptions.xxl"
            xl="filter.UIOptions.xl"
            lg="filter.UIOptions.lg"
            md="filter.UIOptions.md"
            sm="filter.UIOptions.sm"
            xs="filter.UIOptions.xs">
                <MudStack Row @key="id" AlignItems="AlignItems.End">

                    <CascadingValue Name="@FormHelper.ParentDisabledName" Value="filter.IsDisabled">

                        @if (filter.UIOptions.Template == null)
                        {
                        @if (filter is BooleanFilterModel booleanFilter)
                        {
                            <BooleanFilterUI Filter="filter" />
                        }
                        else if (filter is StringFilterModel stringFilter)
                        {
                            <StringFilterUI Filter="filter" />
                        }
                        else if (filter is EnumFilterModel enumFilter && enumFilter.EnumTypeToUse != null)
                        {
                            <EnumFilterUI Filter="filter" EnumType="enumFilter.EnumType" />
                        }
                        else if (filter is DateFilterModel dateFilter)
                        {
                            <DateFilterUI Filter="filter" />
                        }
                        else if (filter is NumericFilterModel)
                        {
                            <NumericFilterUI Filter="filter" />
                        }
                        }
                        else
                        {
                            @filter.UIOptions.Template(filter);
                        }

                </CascadingValue>

            <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@(() => RemoveFilterComponent(id))" />
        </MudStack>
            </MudItem>
    }
    </MudGrid>

}

@FilterTempalte

@if (DTO != null)
{
    <MudMenu>
        <ActivatorContent>
            <MudButton>Add</MudButton>
        </ActivatorContent>
        <ChildContent>

            @foreach (var field in Fields)
            {
                <MudMenuItem OnClick="() => AddFilter(field)">
                    <MudStack Row>
                        @field.Name
                        <MudSpacer/>
                        <MudChip T="string">@GetTypeName(field)</MudChip>
                    </MudStack>
                </MudMenuItem>
            }
        </ChildContent>
    </MudMenu>
}