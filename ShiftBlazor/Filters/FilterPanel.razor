@using ShiftSoftware.ShiftBlazor.Filters.Models
@using ShiftSoftware.ShiftBlazor.Filters.UI

@if (Parent?.Filters != null)
{
    @foreach (var (id, filter) in Parent.Filters.Where(x => !x.Value.IsHidden))
    {
        <MudStack Row @key="id">

            <MudField Variant="Variant.Outlined" Label="@filter.Field" Disabled="filter.IsReadOnly">
                <CascadingValue Name="@FormHelper.ParentDisabledName" Value="filter.IsReadOnly">
                    <MudStack Row AlignItems="AlignItems.End" Spacing="2">

                        @if (filter is BooleanFilterModel booleanFilter)
                        {
                            <BooleanFilterUI Filter="filter" />
                        }
                        else if (filter is StringFilterModel stringFilter)
                        {
                            <StringFilterUI Filter="filter" />
                        }
                        else if (filter is EnumFilterModel enumFilter && enumFilter.EnumTypeToUse != null)
                        {
                            <EnumFilterUI Filter="filter" EnumType="enumFilter.EnumType" />
                        }
                        else if (filter is DateFilterModel dateFilter)
                        {
                            <DateFilterUI Filter="filter" />
                        }
                        else if (filter is NumericFilterModel)
                        {
                            <NumericFilterUI Filter="filter" />
                        }

                    </MudStack>
                </CascadingValue>
            </MudField>

            <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@(() => RemoveFilterComponent(id))" />
        </MudStack>
    }

}

@FilterTempalte

@if (DTO != null)
{
    <MudMenu>
        <ActivatorContent>
            <MudButton>Add</MudButton>
        </ActivatorContent>
        <ChildContent>

            @foreach (var field in Fields)
            {
                <MudMenuItem OnClick="() => AddFilter(field)">@field.Name</MudMenuItem>
            }
        </ChildContent>
    </MudMenu>
}